/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode slow=head;
        ListNode fast=head; //two pointer
        while(fast!=null&& fast.next!=null){ 
            slow=slow.next; 
            fast=fast.next.next; //slow move one node, fasrt move two node
            if(slow==fast){
                return true;
            }
        }
        return false;
    }
}
