/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} n
 * @return {ListNode}
 */
var removeNthFromEnd = function(head, n) {
    let dummy = new ListNode(-1);
    dummy.next=head;
    //find the point 
    //be sure to deal with the dummy head position carefully
    let currNode=findEnd(dummy, n+1);
    currNode.next=currNode.next.next;
    return dummy.next;
};

var findEnd= function(head, n){
    let p1 =head;
    //let p1 be at the front of delete point 
    for (let i = 0; i < n; i++) {
        p1=p1.next;
    }
    //let p2 move with p1 together
    let p2=head;
    while(p1){
        // console.log(p1);
        // console.log(p2);
        p1=p1.next;
        p2=p2.next;
    }
    return p2;
};
