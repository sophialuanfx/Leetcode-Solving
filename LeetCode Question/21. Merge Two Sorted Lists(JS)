/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    let dummy=new ListNode(-1);
    let p=dummy;
    let p1=list1;
    let p2=list2;
    //using the recursion way much easy than other 
    while(p1&&p2){
        if(p1.val>p2.val){
            dummy.next=p2;
            p2=p2.next;
        }else{
            dummy.next=p1;
            p1=p1.next;
        }
        dummy=dummy.next;
    }
    if(p1){
        dummy.next=p1;
    }
    if(p2){
        dummy.next=p2;
    }
    return p.next;
};
