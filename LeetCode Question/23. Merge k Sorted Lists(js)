/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode[]} lists
 * @return {ListNode}
 */
var mergeKLists = function(lists) {
   //the basce is the same just using different way priorty queue is same as sorted array
    let head=new ListNode(-1);
    let p=head;
    let arr =[];
    lists.forEach(list => {
        let cur = list;
        while(cur) {
            arr.push(cur.val);
            cur = cur.next;
        }
    });
    arr.sort(
        function(a,b)
        {return a-b});
    for(let i=0; i<arr.length;i++){
        let smallest= arr[i];
        let newNode=new ListNode(smallest);
        p.next=newNode;
        p=p.next;
    }
    return head.next;
};
