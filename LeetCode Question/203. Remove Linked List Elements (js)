/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} val
 * @return {ListNode}
 */
var removeElements = function(head, val) {
    if(!head){// return head is not good node
        
        return head;
    }
    //false
    console.log(!head);

    let pre=head;
    let first=head.next;

    //first and pre is ok node
    while(first&&pre){
        if(first.val==val){
                pre.next=first.next;
                first=first.next
            }else{
                pre=pre.next;
                first=first.next;
            }
        
    }
    if(head.val==val){
        return head.next
    }else{
        return head;
    }
    
};
