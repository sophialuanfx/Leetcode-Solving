/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   
    public List<Integer> preorderTraversal(TreeNode root) {
        //<root><left><right>
        List<Integer> list=new LinkedList<Integer>();    

        //iterater
        if(root == null) return list;
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        while(!stack.isEmpty()) { 
            TreeNode curr = stack.pop();
            list.add(curr.val); //add value to list
            if(curr.left!=null) {
              stack.push(curr.left); //push left first
            }
            if(curr.right!=null) {
               stack.push(curr.right);  //right after
            }
        }

        //recursive
        // traversal(list, root);
        return list;
    }
    public void traversal(List<Integer> list, TreeNode root){
        if(root==null){
            return;
        }
         list.add(root.val);
         traversal(list,root.left);
         traversal(list, root.right);
    }
}
